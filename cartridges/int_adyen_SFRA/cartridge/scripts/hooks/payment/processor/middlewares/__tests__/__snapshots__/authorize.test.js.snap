// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Authorize should authorize 3DS payments 1`] = `
Object {
  "authorized": true,
  "authorized3d": true,
  "orderNo": "15",
  "paymentInstrument": Object {
    "custom": Object {
      "adyenPaymentData": undefined,
    },
    "paymentMethod": "mocked_method",
    "paymentTransaction": Object {
      "paymentProcessor": "mockedPaymentProcessor",
    },
    "setCreditCardExpirationMonth": [MockFunction],
    "setCreditCardExpirationYear": [MockFunction],
    "setCreditCardNumber": [MockFunction],
    "setCreditCardToken": [MockFunction],
    "setCreditCardType": [MockFunction],
  },
  "redirectObject": Object {
    "data": Object {
      "MD": "mockedMD",
    },
    "url": "mockedUrl",
  },
  "signature": "mockedUrl __ ockedMD",
}
`;

exports[`Authorize should authorize 3DS2 payments 1`] = `
Object {
  "action": "\\"mockedAction\\"",
  "resultCode": "mockedresultCode",
  "threeDS2": "mockedthreeDS2",
}
`;

exports[`Authorize should authorize redirectShopper payments 1`] = `
Object {
  "authorized": true,
  "authorized3d": false,
  "orderNo": "15",
  "paymentInstrument": Object {
    "custom": Object {
      "adyenPaymentData": "mockedpaymentData",
    },
    "paymentMethod": "mocked_method",
    "paymentTransaction": Object {
      "paymentProcessor": "mockedPaymentProcessor",
    },
    "setCreditCardExpirationMonth": [MockFunction],
    "setCreditCardExpirationYear": [MockFunction],
    "setCreditCardNumber": [MockFunction],
    "setCreditCardToken": [MockFunction],
    "setCreditCardType": [MockFunction],
  },
  "redirectObject": Object {
    "url": "mockedURL",
  },
  "signature": "mockedURL __ ockedpaymentData",
}
`;

exports[`Authorize should handle create payment request decisions other than accept 1`] = `
Object {
  "error": true,
}
`;

exports[`Authorize should handle the create payment request decision accept 1`] = `
Object {
  "authorized": true,
  "error": false,
}
`;

exports[`Authorize should return when create payment request fails 1`] = `
Object {
  "authorized": false,
  "error": true,
  "fieldErrors": Array [],
  "serverErrors": Array [
    "mocked_error.payment.processor.not.supported",
  ],
}
`;
