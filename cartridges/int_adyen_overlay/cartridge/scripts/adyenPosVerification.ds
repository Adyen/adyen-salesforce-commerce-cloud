/**
*
* @input Order : dw.order.Order
* @input Amount : dw.value.Money The amount to authorize
* @input PaymentInstrument : dw.order.PaymentInstrument
* @input CurrentSession : dw.system.Session
* @input CurrentRequest : dw.system.Request
*
*
*/

/* API Includes */
var Logger = require('*/cartridge/scripts/models/LoggerModel');
var Transaction = require('dw/system/Transaction');

/* Script Modules */
var AdyenHelper = require('*/cartridge/scripts/util/AdyenHelper');

function execute(args) {
    var result = verify(args);
    if (result.error) {
        return PIPELET_ERROR;
    }
    return PIPELET_NEXT;
}

function verify(args) {
    try {
        var order = args.Order;
        var paymentInstrument = args.PaymentInstrument;
        var tokenID = '';
        var errorMessage = '';
        if (order == null) {
            Logger.getLogger('Adyen').error('No order present.');
            return {error: true};
        }

        var customer = order.getCustomer();
        var profile = !empty(customer) && customer.registered && !empty(customer.getProfile()) ? customer.getProfile() : null;
        var customerID = '';
        if (!empty(profile) && !empty(profile.getCustomerNo())) {
            customerID = profile.getCustomerNo();
        }

        var shopperObject = AdyenHelper.createShopperObject({
            Customer: customer,
            Basket: order
        });

        var date = new Date();
	    var dateString = date.getTime().toString();
    	var serviceId = dateString.substr(dateString.length - 10);
	    var poiid = args.TerminalId;
        var requestPOS = {  
						   "SaleToPOIRequest":{  
						      "MessageHeader":{  
						         "ProtocolVersion":"3.0",
						         "MessageClass":"Service",
						         "MessageCategory":"Payment",
						         "MessageType":"Request",
						         "ServiceID": serviceId,
						         "SaleID":"SalesforceCommerceCloud",
						         "POIID": poiid
						      },
						      "PaymentRequest":{  
						         "SaleData":{  
						            "SaleTransactionID":{  
						               "TransactionID": order.getOrderNo(),
						               "TimeStamp": new Date()
						            },
						            "SaleReferenceID":"SalesforceCommerceCloudPOS"
						         },
						         "PaymentTransaction":{  
						            "AmountsReq":{  
						               "Currency": args.Amount.currencyCode,
						               "RequestedAmount": args.Amount.value
						            }
						         }
						      }
						   }
						}
        
        var callResult = null;
        var service = AdyenHelper.getService(AdyenHelper.SERVICE.POSPAYMENT);
        if (service == null) {
            return {error: true};
        }
        var resultObject = null;
		var apiKey = AdyenHelper.getAdyenApiKey();
		
        service.addHeader('Content-type','application/json');
        service.addHeader('charset', 'UTF-8');
        service.addHeader('X-API-KEY', apiKey);
        
        callResult = service.call(JSON.stringify(requestPOS));
        
        if (callResult.isOk() == false){
            Logger.getLogger('Adyen').error('Adyen: Call error code' +  callResult.getError().toString() + ' Error => ResponseStatus: ' + callResult.getStatus()  + ' | ResponseErrorText: ' +  callResult.getErrorMessage() + ' | ResponseText: ' + callResult.getMsg());
            args.AdyenErrorMessage = dw.web.Resource.msg('confirm.error.declined','checkout', null);
            var newDate = new Date();
            var newDateString = newDate.getTime().toString();
            var newServiceId = newDateString.substr(newDateString.length - 10);

            var abortRequest = {
							   "SaleToPOIRequest" : {
							      "AbortRequest" : {
							         "AbortReason" : "MerchantAbort",
							         "MessageReference" : {
							            "SaleID" : "SalesforceCommerceCloud",
							            "ServiceID" : serviceId,
							            "MessageCategory" : "Payment"
							         }
							      },
							      "MessageHeader" : {
							         "MessageType" : "Request",
							         "MessageCategory" : "Abort",
							         "MessageClass" : "Service",
							         "ServiceID" : newServiceId,
							         "SaleID" : "SalesforceCommerceCloud",
							         "POIID" : poiid,
							         "ProtocolVersion" : "3.0"
							      }
							   }
							}
            var abortResult = service.call(JSON.stringify(abortRequest));
            return {
                error: true,
                args: args
            };
        }

        resultObject = callResult.object;
        var resultText = resultObject.getText();
        
        if (empty(resultText)) {
            return {error: true};
        }

        // build the response object
        var responseObj;
        try {
            responseObj = JSON.parse(resultText);
        } catch (ex) {
            Logger.getLogger('Adyen').error('error parsing response object ' + ex.message);
            return {error: true};
        }

    } catch (e) {
        Logger.getLogger('Adyen').fatal('Adyen: ' + e.toString() + ' in ' + e.fileName + ':' + e.lineNumber);
        return {error: true};
    }

	args.Response = responseObj;
    return args;
}

module.exports = {
    'execute': execute,
    'verify': verify
}