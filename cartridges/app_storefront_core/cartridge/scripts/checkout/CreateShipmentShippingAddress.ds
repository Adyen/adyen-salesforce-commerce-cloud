/**
 * Creates a shipping address for the given shipment and copies
 * the address details stored in the given address form to the
 * created shipment address.
 * The method additionally sets the given gift options to the 
 * shipment.
 *
 * @input Shipment : dw.order.Shipment The shipment to create the address for.
 * @input AddressForm : dw.web.FormGroup The address form.
 * @input GiftOptionsForm : dw.web.FormGroup The gift options form.
 * 
 * @output ShippingAddress : dw.order.OrderAddress The shipment's shipping address.
 */
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.web );

function execute( pdict : PipelineDictionary ) : Number
{
	var shipment : Shipment = pdict.Shipment;
	var addressFields : FormGroup = pdict.AddressForm.addressFields;
	var giftOptions : FormGroup = pdict.GiftOptionsForm;
	var shippingAddress : OrderAddress = shipment.shippingAddress;
	
	// if the shipment has no shipping address yet, create one
	if( shippingAddress == null )
	{
		shippingAddress = shipment.createShippingAddress();	
	}
	
	// copy the address details
	shippingAddress.setFirstName( addressFields.firstName.value );
	shippingAddress.setLastName( addressFields.lastName.value );
	shippingAddress.setAddress1( addressFields.address1.value );
	shippingAddress.setAddress2( addressFields.address2.value );
	shippingAddress.setCity( addressFields.city.value );
	shippingAddress.setPostalCode( addressFields.postal.value );
	shippingAddress.setStateCode( addressFields.states.state.value );
	shippingAddress.setCountryCode( addressFields.country.value );
	shippingAddress.setPhone( addressFields.phone.value );
	
	// copy the gift options
	if( giftOptions != null)
	{
		shipment.setGift( giftOptions.isGift.value );
		shipment.setGiftMessage( giftOptions.giftMessage.value );
	}
	
	// output shipping address
	pdict.ShippingAddress = shippingAddress;
		
    return PIPELET_NEXT;
}