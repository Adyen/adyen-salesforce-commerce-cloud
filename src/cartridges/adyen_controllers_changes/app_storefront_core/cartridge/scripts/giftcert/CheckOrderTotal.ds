/**
*  Determines if another Gift Certificate is necessary 
*  to handle the order balance. If the current set 
*  of Gift Certificate totals are equal to the order 
*  balance, then it is not necessary to add another 
*  Gift Certificate payment instrument. If this is the case,
*  the script sets and error message and returns 
*  PIPELET_ERROR. 
*
* @input Basket : dw.order.Basket The basket.
* @output Status : dw.system.Status the status of the operation.
*/
importPackage( dw.order );
importPackage( dw.system );
importPackage( dw.util);
importPackage( dw.value );

function execute( pdict : PipelineDictionary ) : Number
{

    // read pipeline dictionary input parameter
    var basket : Basket = pdict.Basket;

	// get the total amounts
	var totalPrice : Money = basket.getTotalGrossPrice();
    var giftCertTotal : Money = new Money(0.0, basket.getCurrencyCode());

	// get the set of Gift Certificates
	var giftCerts : Collection = basket.getGiftCertificatePaymentInstruments();
	var pi : OrderPaymentInstrument = null;
	var iter : Iterator = giftCerts.iterator();
	while (iter.hasNext()) 
	{
		pi = iter.next();
		giftCertTotal = giftCertTotal.add(pi.getPaymentTransaction().getAmount());
	}
	
	// if the total is greater than the Gift Certificate total, return
	if (giftCertTotal.getValue() < totalPrice.getValue()) {
        pdict.Status = new Status(Status.OK);
        return PIPELET_NEXT;
	}
	else {
		pdict.Status = new Status(Status.ERROR, "ORDER_AMOUNT_EXCEEDED");
        return PIPELET_ERROR;
	}
}
