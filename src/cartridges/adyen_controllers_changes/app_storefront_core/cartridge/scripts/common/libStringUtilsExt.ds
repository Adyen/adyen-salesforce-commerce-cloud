/**
* Return a StringUtilsExt instance
*
* @output StringUtilsExt : Object
*
*/
importPackage( dw.system );
importPackage( dw.util );

var StringUtilsExt = {
	trim: function(str : String) : String {
		return StringUtils.trim(str);
	},
	titleize: function(str : String){
      if (str == null) return '';
      return new String(str).toLowerCase().replace(/(?:^|\s)\S/g, function(c){ return c.toUpperCase(); });
    },

    capitalize : function(str){
      str = str == null ? '' : String(str).toLowerCase();
      return str.charAt(0).toUpperCase() + str.slice(1);
    },
    
    camelize: function(str : String){
      return StringUtilsExt.trim(str).toLowerCase().replace(/[-_\s]+(.)?/g, function(match, c){ return c.toUpperCase(); });
    },

    underscored: function(str){
      return StringUtilsExt.trim(str).replace(/([a-z\d])([A-Z]+)/g, '$1_$2').replace(/[-\s]+/g, '_').toLowerCase();
    },

    dasherize: function(str){
      return StringUtilsExt.trim(str).replace(/([A-Z])/g, '-$1').replace(/[-_\s]+/g, '-').toLowerCase();
    },

    classify: function(str){
      return StringUtilsExt.titleize(String(str).replace(/_/g, ' ')).replace(/\s/g, '');
    },

    humanize: function(str){
      return StringUtilsExt.capitalize(StringUtilsExt.underscored(str).replace(/_id$/,'').replace(/_/g, ' '));
    }
};

function getStringUtilsExt(){
	return StringUtilsExt;
}

function execute( args : PipelineDictionary ) : Number
{
	args.StringUtilsExt = getStringUtilsExt();
	
    return PIPELET_NEXT;
}
