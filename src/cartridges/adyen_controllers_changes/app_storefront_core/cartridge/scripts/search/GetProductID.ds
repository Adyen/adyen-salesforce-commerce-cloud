/**
* This script returns the Product ID of a product search result. The actual 
* product ID that is returned is on of the following:
* 1. The ID of the product if it is not a product master.
* 2. The ID of the product if it is a product master and the ProductSearchHit collection is greater than one. 
* 3. The ID of the product in the ProductSearchHit collection if there is only one product in the collection. 
*
* @input ProductSearchModel : dw.catalog.ProductSearchModel The search model.
* @output ProductID : String The product ID of the product, product master or product variant.
*
*/
importPackage( dw.system );
importPackage( dw.catalog );
importPackage( dw.util );

function execute( args : PipelineDictionary ) : Number
{

    // Get the model, the product from the model and its ID
    var model : ProductSearchModel = args.ProductSearchModel;
    var targetProduct : Product = model.getProducts().next();
    var productID : String = targetProduct.getID();
    
    // If the target was not a master, simply return the product ID
    if (!targetProduct.isMaster())
    {
	   args.ProductID = productID;
       return PIPELET_NEXT;
    }
    
	// In the case a variation master, the master is the representative for 
	// all it's variants. If there is only one variant, return the variant's 
	// product ID.
	var iter : Iterator = model.getProductSearchHits();
	if (iter.hasNext())
	{
		var productSearchHit : ProductSearchHit = iter.next();
		if (productSearchHit.getRepresentedProducts().size() == 1)
		{
			productID = productSearchHit.getFirstRepresentedProduct().getID();
	    }
    }
 
	// output the ID.
	args.ProductID = productID;
	
    return PIPELET_NEXT;
}
