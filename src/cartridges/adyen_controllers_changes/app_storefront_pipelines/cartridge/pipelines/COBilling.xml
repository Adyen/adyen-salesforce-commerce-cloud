<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline group="Checkout">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>This pipeline implements the billing logic. It is used by both the single shipping and the multi shipping scenario and is responsible for providing the payment method selection as well as entering a billing address.</description>
        </text-node>
        <node-display width="3" x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_2">
    <segment>
      <node>
        <text-node>
          <description>Starting point for billing. After a successful shipping setup both COShipping and COShippingMultiple jump to this node.</description>
        </text-node>
        <node-display x="3" y="3"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_3">
    <segment>
      <node>
        <text-node>
          <description>Initializes all forms of the billing page including:
- address form
- email address
- coupon form</description>
        </text-node>
        <node-display x="6" y="3"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_4">
    <segment>
      <node>
        <text-node>
          <description>Initializes the address form:
- if customer chose option &quot;use as billing address&quot; on single shipping page the form is prepopulated with the shipping address, otherwise
- prepopulate with already set billing address, otherwise
- prepopulate with default address of authenticated customer</description>
        </text-node>
        <node-display width="3" x="9" y="3"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_5">
    <segment>
      <node>
        <text-node>
          <description>initializes the email address form field:
- if there's already a customer email set at the basket this email address is taken, otherwise
- if the current customer is authenticated the email address of the customer's profile is taken</description>
        </text-node>
        <node-display width="2" x="13" y="3"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_6">
    <segment>
      <node>
        <text-node>
          <description>Initializes the credit card list by determining the saved customer payment instruments of type credit card.</description>
        </text-node>
        <node-display x="17" y="3"/>
      </node>
    </segment>
  </branch>
  <branch basename="Start">
    <segment>
      <node>
        <start-node call-mode="public" name="Start" secure="true"/>
        <node-display x="3" y="4"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="-1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <jump-node start-name-ref="Cart-Show"/>
              <node-display orientation="horizontal" x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="COBilling-InitForms"/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="COShipping-PrepareShipments"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-Calculate"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="UpdatePageMetaData" pipelet-set-identifier="bc_api">
          <key-binding alias="null" key="DefaultKeywords"/>
          <key-binding alias="null" key="DefaultDescription"/>
          <key-binding alias="null" key="Product"/>
          <key-binding alias="null" key="Category"/>
          <key-binding alias="&quot;SiteGenesis Checkout&quot;" key="DefaultTitle"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="!empty(Basket.paymentInstrument) &amp;&amp; Basket.paymentInstrument.paymentMethod == dw.order.PaymentInstrument.METHOD_GIFT_CERTIFICATE" condition-operator="expr"/>
        <node-display orientation="horizontal" x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
                <config-property key="Clear" value="false"/>
                <key-binding alias="CurrentForms.billing" key="Form"/>
                <key-binding alias="{giftCertCode: Basket.paymentInstrument.giftCertificateCode}" key="Object"/>
              </pipelet-node>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in3" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-continue-node secure="true" start-name="Billing" transaction-required="false">
          <template buffered="true" dynamic="false" name="checkout/billing/billing"/>
        </interaction-continue-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="applyCoupon">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="CSRF-Validate"/>
              <node-display x="-3" y="2"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="CurrentHttpParameterMap.couponCode.stringValue || CurrentHttpParameterMap.dwfrm_billing_couponCode.stringValue" key="From_0"/>
                <key-binding alias="CouponCode" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-ref="Cart-AddCoupon"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <jump-node start-name-ref="COBilling-HandleCoupon"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="creditCardSelect">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="1" y="-1"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="CSRF-Validate"/>
              <node-display x="-1" y="-1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <jump-node start-name-ref="COBilling-UpdateCreditCardSelection"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b4" source-connector="paymentSelect">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="-1" y="-3"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="CSRF-Validate"/>
              <node-display x="-2" y="-1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <jump-node start-name-ref="COBilling-UpdatePaymentMethodSelection"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b5" source-connector="redeemGiftCert">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="CSRF-Validate"/>
              <node-display x="-2" y="2"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="CurrentForms.billing.giftCertCode.htmlValue" key="From_0"/>
                <key-binding alias="GiftCertCode" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="COBilling-RedeemGiftCertificate"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <jump-node start-name-ref="COBilling-ReturnToForm"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b6" source-connector="save">
          <transition target-connector="in"/>
          <segment>
            <node>
              <call-node start-name-ref="CSRF-Validate"/>
              <node-display x="0" y="2"/>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="COBilling-ResetPaymentForms"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../+1"/>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-ref="COBilling-ValidateBilling"/>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="Error">
                <transition target-connector="in1" target-path="./b5.3"/>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="COBilling-HandleBillingAddress"/>
              <node-display x="0" y="1"/>
              <branch basename="b4" source-connector="error">
                <transition target-connector="in1" target-path="./b5.2"/>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="COBilling-HandlePaymentSelection"/>
              <node-display x="0" y="1"/>
              <branch basename="b5" source-connector="error">
                <transition target-connector="in1"/>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="2" y="-1"/>
                  </node>
                  <transition target-connector="in2" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="-1"/>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="-1"/>
                  </node>
                  <transition target-connector="in1" target-path="../../+1"/>
                </segment>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="COBilling-SaveAddress"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="true" key="From_0"/>
                <key-binding alias="CurrentForms.billing.fulfilled.value" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <jump-node start-name-ref="COSummary-Start"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b7" source-connector="selectAddress">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="CSRF-Validate"/>
              <node-display x="-1" y="2"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <jump-node start-name-ref="COBilling-UpdateAddressDetails"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in2" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="2" y="2"/>
      </node>
      <transition target-connector="in1" target-path="./-2">
        <transition-display>
          <bend-point relative-to="target" x="4" y="0"/>
        </transition-display>
      </transition>
    </segment>
  </branch>
  <branch basename="InitForms">
    <segment>
      <node>
        <start-node call-mode="private" name="InitForms" secure="false"/>
        <node-display x="6" y="4"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="COBilling-InitAddressForm"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="COBilling-InitEmailAddress"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="COBilling-InitCreditCardList"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="CurrentForms.billing.paymentMethods.valid" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="COBilling-InitPaymentMethodList"/>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="0" y="-2"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.billing.paymentMethods" key="FormElement"/>
        </pipelet-node>
        <node-display x="2" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-2" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.billingcoupon" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.billinggiftcert" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="UpdateAddress">
    <segment>
      <node>
        <start-node name="UpdateAddress" secure="true"/>
        <node-display x="4" y="7"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="COBilling-InitCreditCardList"/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in3" target-path="/Start.2"/>
    </segment>
  </branch>
  <branch basename="InitAddressForm">
    <segment>
      <node>
        <start-node call-mode="private" name="InitAddressForm" secure="false"/>
        <node-display x="9" y="4"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="CurrentForms.singleshipping.shippingAddress.useAsBillingAddress.value == true" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="app_storefront_core:checkout/CopyAddressFormFields.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="CurrentForms.billing.billingAddress.addressFields" key="BillingAddressForm"/>
                <key-binding alias="CurrentForms.singleshipping.shippingAddress.addressFields" key="ShippingAddressForm"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1">
              <transition-display>
                <bend-point relative-to="target" x="-2" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="Basket.billingAddress == null" condition-operator="expr"/>
        <node-display orientation="horizontal" x="1" y="0"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <decision-node condition-key="!(CurrentCustomer.authenticated &amp;&amp; CurrentCustomer.profile.addressBook.preferredAddress != null)" condition-operator="expr"/>
              <node-display orientation="horizontal" x="1" y="0"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in1" target-path="./+1">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                    <bend-point relative-to="target" x="1" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
                <config-property key="Clear" value="false"/>
                <key-binding alias="CurrentForms.billing.billingAddress.addressFields" key="Form"/>
                <key-binding alias="CurrentCustomer.profile.addressBook.preferredAddress" key="Object"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node custom-name="Bind stateCode to sub form group" pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
                <config-property key="Clear" value="false"/>
                <key-binding alias="CurrentForms.billing.billingAddress.addressFields.states" key="Form"/>
                <key-binding alias="CurrentCustomer.profile.addressBook.preferredAddress" key="Object"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in2" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in2" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <config-property key="Clear" value="false"/>
          <key-binding alias="CurrentForms.billing.billingAddress.addressFields" key="Form"/>
          <key-binding alias="Basket.billingAddress" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Bind stateCode to sub form group" pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <config-property key="Clear" value="false"/>
          <key-binding alias="CurrentForms.billing.billingAddress.addressFields.states" key="Form"/>
          <key-binding alias="Basket.billingAddress" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="InitEmailAddress">
    <segment>
      <node>
        <start-node call-mode="private" name="InitEmailAddress" secure="false"/>
        <node-display x="13" y="4"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="Basket.customerEmail != null" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Eval" pipelet-set-identifier="bc_api">
                <config-property key="OnError" value="null"/>
                <config-property key="Transactional" value="false"/>
                <config-property key="Expression" value="CurrentForms.billing.billingAddress.email.emailAddress.value = Basket.customerEmail"/>
                <key-binding alias="Result" key="Result"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+2"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="!(CurrentCustomer.authenticated &amp;&amp; CurrentCustomer.profile.email != null)" condition-operator="expr"/>
        <node-display orientation="horizontal" x="1" y="0"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in1" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Eval" pipelet-set-identifier="bc_api">
          <config-property key="OnError" value="null"/>
          <config-property key="Transactional" value="false"/>
          <config-property key="Expression" value="CurrentForms.billing.billingAddress.email.emailAddress.value = CurrentCustomer.profile.email"/>
          <key-binding alias="Result" key="Result"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in2" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="0"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="InitCreditCardList">
    <segment>
      <node>
        <start-node call-mode="private" name="InitCreditCardList" secure="false"/>
        <node-display x="17" y="4"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="Exception"/>
          <config-property key="ScriptFile" value="app_storefront_core:checkout/GetNonGiftCertificatePaymentAmount.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="PaymentAmount" key="Amount"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="(CurrentRequest.locale == 'default') ? null : CurrentRequest.locale" key="From_0"/>
          <key-binding alias="CurrentLocale" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="dw.order.PaymentMgr.getApplicablePaymentMethods(CurrentCustomer,CountryCode,PaymentAmount)" key="From_1"/>
          <key-binding alias="ApplicablePaymentMethods" key="To_1"/>
          <key-binding alias="dw.order.PaymentMgr.getPaymentMethod(dw.order.PaymentInstrument.METHOD_CREDIT_CARD).getApplicablePaymentCards(CurrentCustomer,CountryCode,PaymentAmount)" key="From_2"/>
          <key-binding alias="ApplicablePaymentCards" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="CurrentLocale ? CurrentLocale.substring(CurrentLocale.length-2,CurrentLocale.length) : CurrentForms.billing.billingAddress.addressFields.country.value.toUpperCase()" key="From_0"/>
          <key-binding alias="CountryCode" key="To_0"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="BindPaymentCardsToForm" pipelet-name="SetFormOptions" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.type" key="FormField"/>
          <key-binding alias="null" key="Begin"/>
          <key-binding alias="null" key="End"/>
          <key-binding alias="ApplicablePaymentCards" key="Options"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="CurrentCustomer.authenticated" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="GetCustomerPaymentInstruments" pipelet-set-identifier="bc_api">
                <key-binding alias="AvailableCreditCards" key="PaymentInstruments"/>
                <key-binding alias="dw.order.PaymentInstrument.METHOD_CREDIT_CARD" key="PaymentMethod"/>
                <key-binding alias="CurrentCustomer" key="Customer"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="app_storefront_core:checkout/ValidatePaymentInstruments.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="CountryCode" key="CountryCode"/>
                <key-binding alias="CurrentCustomer" key="Customer"/>
                <key-binding alias="PaymentAmount" key="PaymentAmount"/>
                <key-binding alias="AvailableCreditCards" key="PaymentInstruments"/>
                <key-binding alias="ApplicableCreditCards" key="ValidPaymentInstruments"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in2" target-path="../+1"/>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+2"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="2"/>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="-1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="2" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="InitPaymentMethodList">
    <segment>
      <node>
        <start-node call-mode="private" name="InitPaymentMethodList" secure="false"/>
        <node-display x="20" y="4"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="BindPaymentMethodsToForm" pipelet-name="SetFormOptions" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.billing.paymentMethods.selectedPaymentMethodID" key="FormField"/>
          <key-binding alias="ApplicablePaymentMethods" key="Options"/>
          <key-binding alias="null" key="Begin"/>
          <key-binding alias="null" key="End"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_14">
    <segment>
      <node>
        <text-node>
          <description>Clean shipments.</description>
        </text-node>
        <node-display x="2" y="9"/>
      </node>
    </segment>
  </branch>
  <branch basename="ReturnToForm">
    <segment>
      <node>
        <start-node call-mode="private" name="ReturnToForm" secure="false"/>
        <node-display x="5" y="10"/>
      </node>
      <transition target-connector="in1" target-path="/Start.3">
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </transition>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_16">
    <segment>
      <node>
        <text-node>
          <description>Adjust gift certificate redemptions as after applying coupon(s), order total is changed.
AdjustGiftCertificate pipeline removes and then adds currently added gift certificates to reflect order total changes.</description>
        </text-node>
        <node-display height="2" x="9" y="12"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_17">
    <segment>
      <node>
        <text-node>
          <description>Attempts to redeem a gift certificate. If the gift certificate wasn't redeemed, the form field is invalidated with the appropriate error message. If the gift certificate was redeemed, the form gets cleared. This start node is called by an Ajax request and generates a JSON response.</description>
        </text-node>
        <node-display width="2" x="11" y="13"/>
      </node>
    </segment>
  </branch>
  <branch basename="AdjustGiftCertificates">
    <segment>
      <node>
        <start-node call-mode="private" name="AdjustGiftCertificates" secure="false"/>
        <node-display x="9" y="14"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="app_storefront_core:checkout/GetGiftCertIdList.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="gcIdList" key="gcIdList"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="-1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node/>
              <node-display orientation="horizontal" x="2" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
          <bend-point relative-to="target" x="-1" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <loop-node element-key="gcID" iterator-key="gcIdList"/>
        <node-display orientation="horizontal" x="0" y="1"/>
        <branch basename="b2" source-connector="do">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="app_storefront_core:checkout/RemoveGiftCertificatePaymentInstrument.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="Basket" key="Basket"/>
                <key-binding alias="gcID" key="GiftCertificateID"/>
                <key-binding alias="GiftCertRemoveStatus" key="Status"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="1" y="0"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in2" target-path="./+1">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                    <bend-point relative-to="target" x="0" y="1"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="loop" target-path="..">
              <transition-display>
                <bend-point relative-to="target" x="0" y="-1"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="null" key="From_0"/>
          <key-binding alias="gcID" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <loop-node element-key="gcID" iterator-key="gcIdList"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="do">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="ScriptFile" value="app_storefront_core:checkout/CreateGiftCertificatePaymentInstrument.ds"/>
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="Basket" key="Basket"/>
                <key-binding alias="gcID" key="GiftCertificateID"/>
                <key-binding alias="NewGCPaymentInstrument" key="PaymentInstrument"/>
                <key-binding alias="GiftCertStatus" key="Status"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="./+1">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                    <bend-point relative-to="target" x="1" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="loop" target-path="..">
              <transition-display>
                <bend-point relative-to="source" x="-1" y="0"/>
                <bend-point relative-to="target" x="-1" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="RedeemGiftCertificate">
    <segment>
      <node>
        <start-node call-mode="private" name="RedeemGiftCertificate" secure="true"/>
        <node-display x="12" y="14"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node custom-name="create fake GiftCertStatus object" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="new Object()" key="From_0"/>
                <key-binding alias="GiftCertStatus" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="'BASKET_NOT_FOUND'" key="From_0"/>
                <key-binding alias="GiftCertStatus.code" key="To_0"/>
                <key-binding alias="true" key="From_1"/>
                <key-binding alias="GiftCertStatus.error" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in3" target-path="../+1">
              <transition-display>
                <bend-point relative-to="source" x="0" y="2"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="ScriptFile" value="app_storefront_core:checkout/CreateGiftCertificatePaymentInstrument.ds"/>
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="GiftCertCode" key="GiftCertificateID"/>
          <key-binding alias="NewGCPaymentInstrument" key="PaymentInstrument"/>
          <key-binding alias="GiftCertStatus" key="Status"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-Calculate"/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="RedeemGiftCertificateJson">
    <segment>
      <node>
        <start-node name="RedeemGiftCertificateJson" secure="false"/>
        <node-display x="14" y="14"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentHttpParameterMap.giftCertCode.stringValue" key="From_0"/>
          <key-binding alias="GiftCertCode" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="COBilling-RedeemGiftCertificate"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CurrentHttpParameterMap.format.stringValue == 'ajax'" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node custom-name="create JSONResponse object" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="new Object()" key="From_0"/>
                <key-binding alias="JSONResponse" key="To_0"/>
                <key-binding alias="'billing.' + GiftCertStatus.code" key="From_1"/>
                <key-binding alias="ResourceProperty" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="GiftCertStatus.code" key="From_0"/>
                <key-binding alias="JSONResponse.status" key="To_0"/>
                <key-binding alias="!GiftCertStatus.error" key="From_1"/>
                <key-binding alias="JSONResponse.success" key="To_1"/>
                <key-binding alias="dw.web.Resource.msgf(ResourceProperty,'checkout', null, GiftCertCode)" key="From_2"/>
                <key-binding alias="JSONResponse.message" key="To_2"/>
                <key-binding alias="GiftCertCode" key="From_3"/>
                <key-binding alias="JSONResponse.code" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <interaction-node transaction-required="false">
                <description>create JSONResponse object</description>
                <template buffered="true" dynamic="false" name="util/responsejson"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_21">
    <segment>
      <node>
        <text-node>
          <description>Attempts to remove a gift certificate from the basket payment instruments and generates a JSON response with a status. This start node is called by an Ajax request.</description>
        </text-node>
        <node-display width="2" x="16" y="13"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_22">
    <segment>
      <node>
        <text-node>
          <description>Renders the order summary including mini cart order totals and shipment summary. This is used to update the order totals in the UI based on the recalculated basket after a coupon code has been applied.</description>
        </text-node>
        <node-display width="2" x="19" y="13"/>
      </node>
    </segment>
  </branch>
  <branch basename="RemoveGiftCertificate">
    <segment>
      <node>
        <start-node call-mode="public" name="RemoveGiftCertificate" secure="true"/>
        <node-display x="16" y="14"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="!empty(CurrentHttpParameterMap.giftCertificateID.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="Cart-GetExistingBasket"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../+1">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="1"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="app_storefront_core:checkout/RemoveGiftCertificatePaymentInstrument.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="Basket" key="Basket"/>
                <key-binding alias="CurrentHttpParameterMap.giftCertificateID.stringValue" key="GiftCertificateID"/>
                <key-binding alias="GiftCertRemoveStatus" key="Status"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="error">
                <transition target-connector="in1" target-path="../+1"/>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="Cart-Calculate"/>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+2"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="2"/>
      </node>
      <transition target-connector="in2" target-path="./+1">
        <transition-display>
          <bend-point relative-to="target" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <jump-node start-name-ref="COBilling-Start"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="UpdateSummary">
    <segment>
      <node>
        <start-node name="UpdateSummary" secure="true"/>
        <node-display x="19" y="14"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-Calculate"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Set the correct checkout step" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="4" key="From_0"/>
          <key-binding alias="checkoutstep" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="checkout/minisummary"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="UpdateAddressDetails">
    <segment>
      <node>
        <start-node name="UpdateAddressDetails" secure="true"/>
        <node-display x="21" y="14"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <jump-node start-name-ref="Cart-Show"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="GetCustomerAddress" pipelet-set-identifier="bc_api">
          <key-binding alias="empty(CurrentHttpParameterMap.addressID.value)?CurrentHttpParameterMap.dwfrm_billing_addressList.value:CurrentHttpParameterMap.addressID.value" key="AddressID"/>
          <key-binding alias="Address" key="Address"/>
          <key-binding alias="CurrentCustomer" key="Customer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <config-property key="Clear" value="false"/>
          <key-binding alias="CurrentForms.billing.billingAddress.addressFields" key="Form"/>
          <key-binding alias="Address" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Bind stateCode to sub form group" pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <config-property key="Clear" value="false"/>
          <key-binding alias="CurrentForms.billing.billingAddress.addressFields.states" key="Form"/>
          <key-binding alias="Address" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="Basket.billingAddress != null" condition-operator="expr"/>
        <node-display orientation="horizontal" x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="app_storefront_core:checkout/UpdateBillingAddress.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="CurrentForms.billing.billingAddress" key="AddressForm"/>
                <key-binding alias="Basket.billingAddress" key="BillingAddress"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <jump-node start-name-ref="COBilling-UpdateAddress"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_26">
    <segment>
      <node>
        <text-node>
          <description>Performs validation steps, based upon the entered billing address and address options.</description>
        </text-node>
        <node-display x="2" y="19"/>
      </node>
    </segment>
  </branch>
  <branch basename="HandleCoupon">
    <segment>
      <node>
        <start-node call-mode="private" name="HandleCoupon" secure="true"/>
        <node-display x="6" y="16"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="empty(CouponError)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="COBilling-AdjustGiftCertificates"/>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+2"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="2"/>
      </node>
      <transition target-connector="in3" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="0"/>
      </node>
      <simple-transition/>
      <node>
        <jump-node start-name-ref="COBilling-ReturnToForm"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_28">
    <segment>
      <node>
        <text-node>
          <description>Performs payment method specific checks, such as credit card verification.</description>
        </text-node>
        <node-display x="2" y="20"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_29">
    <segment>
      <node>
        <text-node>
          <description>Mark step as fulfilled.</description>
        </text-node>
        <node-display x="2" y="22"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_30">
    <segment>
      <node>
        <text-node>
          <description>A successful billing page will jump to the next checkout step.</description>
        </text-node>
        <node-display x="2" y="23"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_31">
    <segment>
      <node>
        <text-node>
          <description>Adjust gift certificate redemptions as after applying coupon(s), order total is changed.
AdjustGiftCertificate pipeline removes and then adds currently added gift certificates to reflect order total changes.</description>
        </text-node>
        <node-display width="2" x="5" y="21"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_32">
    <segment>
      <node>
        <text-node>
          <description>Handles the selection of the payment method and performs payment method specific validation and verification upon the entered form fields.</description>
        </text-node>
        <node-display width="2" x="10" y="23"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_33">
    <segment>
      <node>
        <text-node>
          <description>Renders a form dialog to edit an address. The dialog is supposed to be opened by an Ajax request and ends in templates, which just trigger a certain JS event. The calling page of this dialog is responsible for handling these events.</description>
        </text-node>
        <node-display width="2" x="2" y="25"/>
      </node>
    </segment>
  </branch>
  <branch basename="EditAddress">
    <segment>
      <node>
        <start-node name="EditAddress" secure="true"/>
        <node-display x="2" y="26"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.billingaddress" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="GetCustomerAddress" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentHttpParameterMap.addressID.stringValue" key="AddressID"/>
          <key-binding alias="BillingAddress" key="Address"/>
          <key-binding alias="CurrentCustomer" key="Customer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./+2">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <config-property key="Clear" value="false"/>
          <key-binding alias="CurrentForms.billingaddress" key="Form"/>
          <key-binding alias="BillingAddress" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Bind stateCode to sub form group" pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
          <config-property key="Clear" value="false"/>
          <key-binding alias="CurrentForms.billingaddress.states" key="Form"/>
          <key-binding alias="BillingAddress" key="Object"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-continue-node secure="true" start-name="EditBillingAddress" transaction-required="false">
          <template buffered="true" dynamic="false" name="checkout/billing/billingaddressdetails"/>
        </interaction-continue-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="apply">
          <transition target-connector="in"/>
          <segment>
            <node>
              <call-node start-name-ref="CSRF-Validate"/>
              <node-display x="-1" y="2"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="UpdateObjectWithForm" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.billingaddress" key="Form"/>
                <key-binding alias="BillingAddress" key="Object"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <jump-node start-name-ref="COBilling-EditAddressWithError"/>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="components/dialog/dialogapply"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="remove">
          <transition target-connector="in"/>
          <segment>
            <node>
              <call-node start-name-ref="CSRF-Validate"/>
              <node-display x="1" y="2"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="RemoveCustomerAddress" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.billingaddress.object" key="Address"/>
                <key-binding alias="CurrentCustomer" key="Customer"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <jump-node start-name-ref="COBilling-EditAddressWithError"/>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="components/dialog/dialogdelete"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="-1"/>
      </node>
      <transition target-connector="in2" target-path="./-1"/>
    </segment>
  </branch>
  <branch basename="HandlePaymentSelection">
    <segment>
      <node>
        <start-node call-mode="private" name="HandlePaymentSelection" secure="false"/>
        <node-display x="10" y="24"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="null" key="From_0"/>
          <key-binding alias="MissingPaymentProcessor" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
          <bend-point relative-to="target" x="-1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="empty(CurrentForms.billing.paymentMethods.selectedPaymentMethodID.value)" condition-operator="expr"/>
        <node-display orientation="horizontal" x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <call-node start-name-ref="Cart-GetExistingBasket"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="Basket.getTotalGrossPrice() &gt; 0" condition-operator="expr"/>
              <node-display orientation="horizontal" x="1" y="0"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <end-node name="error"/>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
                <bend-point relative-to="source" x="1" y="1"/>
                <bend-point relative-to="target" x="-1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="ok"/>
              <node-display orientation="horizontal" x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
          <bend-point relative-to="target" x="-1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CurrentForms.billing.paymentMethods.selectedPaymentMethodID.value.equals(dw.order.PaymentInstrument.METHOD_GIFT_CERTIFICATE)" condition-operator="expr"/>
        <node-display orientation="horizontal" x="0" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="-1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="ok"/>
              <node-display orientation="horizontal" x="2" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="!empty(dw.order.PaymentMgr.getPaymentMethod(CurrentForms.billing.paymentMethods.selectedPaymentMethodID.value).paymentProcessor)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node custom-name="Handle Pipeline Assignment" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="dw.order.PaymentMgr.getPaymentMethod(CurrentForms.billing.paymentMethods.selectedPaymentMethodID.value).paymentProcessor.ID" key="From_0"/>
                <key-binding alias="HandlePipeline" key="To_0"/>
                <key-binding alias="HandlePipeline + '-Handle'" key="From_1"/>
                <key-binding alias="HandlePipelineAction" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-key="HandlePipelineAction"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1"/>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="2" y="0"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <end-node name="error"/>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="ok"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="true" key="From_0"/>
          <key-binding alias="MissingPaymentProcessor" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="error"/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_36">
    <segment>
      <node>
        <text-node>
          <description>skip the payment handling if the whole payment was made using gift cert</description>
        </text-node>
        <node-display x="9" y="27"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_37">
    <segment>
      <node>
        <text-node>
          <description>if the order total is 0 (in case user has product promotions etc.) then we do not need a valid payment method.</description>
        </text-node>
        <node-display x="12" y="24"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_38">
    <segment>
      <node>
        <text-node>
          <description>Returns information of a gift certificate including its balance as JSON response. Required to check the remaining balance.</description>
        </text-node>
        <node-display x="14" y="25"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetGiftCertificateBalance">
    <segment>
      <node>
        <start-node name="GetGiftCertificateBalance" secure="true"/>
        <node-display x="14" y="26"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="GetGiftCertificate" pipelet-set-identifier="bc_api">
          <key-binding alias="GiftCertificate" key="GiftCertificate"/>
          <key-binding alias="CurrentHttpParameterMap.giftCertificateID.value" key="GiftCertificateID"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="checkout/giftcert/giftcertdetailsjson"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_40">
    <segment>
      <node>
        <text-node>
          <description>Selects a customer credit card and returns the details of the credit card as JSON response. Required to fill credit card form with details of selected credit card.</description>
        </text-node>
        <node-display width="2" x="17" y="25"/>
      </node>
    </segment>
  </branch>
  <branch basename="SelectCreditCard">
    <segment>
      <node>
        <start-node name="SelectCreditCard" secure="true"/>
        <node-display x="17" y="26"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="COBilling-InitCreditCardList"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="app_storefront_core:checkout/GetCustomerCreditCard.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="CurrentHttpParameterMap.creditCardUUID.value" key="CreditCardUUID"/>
          <key-binding alias="ApplicableCreditCards" key="CustomerPaymentInstruments"/>
          <key-binding alias="SelectedCreditCard" key="CreditCardPaymentInstrument"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="source" x="1" y="2"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Assign the unmasked credit card number to the credit card form" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="SelectedCreditCard.creditCardNumber" key="From_0"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.number.value" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="checkout/billing/creditcardjson"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="UpdateCreditCardSelection">
    <segment>
      <node>
        <start-node name="UpdateCreditCardSelection" secure="true"/>
        <node-display x="20" y="26"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="COBilling-InitCreditCardList"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="!empty(CurrentHttpParameterMap.creditCardUUID.value)?CurrentHttpParameterMap.creditCardUUID.value:CurrentHttpParameterMap.dwfrm_billing_paymentMethods_creditCardList.stringValue" key="From_0"/>
          <key-binding alias="UUID" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="app_storefront_core:checkout/GetCustomerCreditCard.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="UUID" key="CreditCardUUID"/>
          <key-binding alias="ApplicableCreditCards" key="CustomerPaymentInstruments"/>
          <key-binding alias="SelectedCreditCard" key="CreditCardPaymentInstrument"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="source" x="1" y="2"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Assign the unmasked credit card number to the credit card form" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="SelectedCreditCard.creditCardNumber" key="From_0"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.number.value" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="!empty(SelectedCreditCard)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="UpdateFormWithObject" pipelet-set-identifier="bc_api">
                <config-property key="Clear" value="false"/>
                <key-binding alias="CurrentForms.billing.paymentMethods.creditCard" key="Form"/>
                <key-binding alias="SelectedCreditCard" key="Object"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <jump-node start-name-ref="COBilling-UpdateAddress"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <jump-node start-name-ref="COBilling-Start"/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="UpdatePaymentMethodSelection">
    <segment>
      <node>
        <start-node name="UpdatePaymentMethodSelection" secure="true"/>
        <node-display x="22" y="26"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentHttpParameterMap.dwfrm_billing_paymentMethods_selectedPaymentMethodID.stringValue" key="From_0"/>
          <key-binding alias="selectedPaymentID" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <jump-node start-name-ref="COBilling-Start"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="EditAddressWithError">
    <segment>
      <node>
        <start-node call-mode="private" name="EditAddressWithError" secure="false"/>
        <node-display orientation="horizontal" x="1" y="31"/>
      </node>
      <transition target-connector="in1" target-path="/EditAddress.2"/>
    </segment>
  </branch>
  <branch basename="HandleBillingAddress">
    <segment>
      <node>
        <start-node call-mode="private" name="HandleBillingAddress" secure="false"/>
        <node-display x="5" y="28"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="COBilling-ObtainBillingAddress"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="app_storefront_core:checkout/UpdateBillingAddress.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="CurrentForms.billing.billingAddress" key="AddressForm"/>
          <key-binding alias="Basket.billingAddress" key="BillingAddress"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="-1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="1" y="-1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Copy the email address to the basket" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <key-binding alias="CurrentForms.billing.billingAddress.email.emailAddress.value" key="From_0"/>
          <key-binding alias="Basket.customerEmail" key="To_0"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="null" key="From_1"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_46">
    <segment>
      <node>
        <text-node>
          <description>The Handle Pipeline is being dynamically called based on a concatenation of the current Payment-Processor and a constant suffix(-Handle).

For example:
Credit Cards processor ID = BASIC_CREDIT
Handle Pipeline = BASIC_CREDIT-Handle

The handle pipeline is responsible for payment provider / payment method specific form validation and payment instrument creation.</description>
        </text-node>
        <node-display height="3" width="2" x="8" y="28"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_47">
    <segment>
      <node>
        <text-node>
          <description>Reset the forms of all payment methods, except the one of the current selected payment method.</description>
        </text-node>
        <node-display x="10" y="35"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_48">
    <segment>
      <node>
        <text-node>
          <description>This branch is called whenever payment condition on the billing page change, e.g. billing address country code, gift certificate redemption, coupon redemption. The applicable payment methods/cards are recalculated. Invalid payment instruments are removed.</description>
        </text-node>
        <node-display x="21" y="35"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_49">
    <segment>
      <node>
        <text-node>
          <description>This branch is used to revalidate existing payment instruments in later checkout steps.</description>
        </text-node>
        <node-display x="27" y="35"/>
      </node>
    </segment>
  </branch>
  <branch basename="ResetPaymentForms">
    <segment>
      <node>
        <start-node call-mode="private" name="ResetPaymentForms" secure="false"/>
        <node-display x="10" y="36"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="CurrentForms.billing.paymentMethods.selectedPaymentMethodID.value.equals(&quot;PayPal&quot;)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.billing.paymentMethods.creditCard" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.billing.paymentMethods.bml" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="RemoveBasketPaymentInstrument" pipelet-set-identifier="bc_api">
                <key-binding alias="null" key="PaymentInstrument"/>
                <key-binding alias="Basket.getPaymentInstruments( dw.order.PaymentInstrument.METHOD_CREDIT_CARD)" key="PaymentInstruments"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="RemoveBasketPaymentInstrument" pipelet-set-identifier="bc_api">
                <key-binding alias="null" key="PaymentInstrument"/>
                <key-binding alias="Basket.getPaymentInstruments( dw.order.PaymentInstrument.METHOD_BML)" key="PaymentInstruments"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+2"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="!CurrentForms.billing.paymentMethods.selectedPaymentMethodID.value.equals(dw.order.PaymentInstrument.METHOD_CREDIT_CARD)" condition-operator="expr"/>
        <node-display orientation="horizontal" x="1" y="0"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <decision-node condition-key="!CurrentForms.billing.paymentMethods.selectedPaymentMethodID.value.equals(dw.order.PaymentInstrument.METHOD_BML)" condition-operator="expr"/>
              <node-display orientation="horizontal" x="1" y="0"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in1" target-path="../+2">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                    <bend-point relative-to="target" x="5" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentForms.billing.paymentMethods.creditCard" key="FormElement"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="CurrentForms.billing.paymentMethods.bml.ssn.valid" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="RemoveBasketPaymentInstrument" pipelet-set-identifier="bc_api">
                      <key-binding alias="null" key="PaymentInstrument"/>
                      <key-binding alias="Basket.getPaymentInstruments( dw.order.PaymentInstrument.METHOD_CREDIT_CARD)" key="PaymentInstruments"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in3" target-path="../../+1">
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                      <bend-point relative-to="target" x="0" y="1"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="target" x="-1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="2" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.billing.paymentMethods.bml" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="RemoveBasketPaymentInstrument" pipelet-set-identifier="bc_api">
          <key-binding alias="null" key="PaymentInstrument"/>
          <key-binding alias="Basket.getPaymentInstruments( dw.order.PaymentInstrument.METHOD_BML)" key="PaymentInstruments"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="RemoveBasketPaymentInstrument" pipelet-set-identifier="bc_api">
          <key-binding alias="null" key="PaymentInstrument"/>
          <key-binding alias="Basket.getPaymentInstruments( &quot;PayPal&quot;)" key="PaymentInstruments"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in3" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="RefreshPaymentMethods">
    <segment>
      <node>
        <start-node name="RefreshPaymentMethods" secure="true"/>
        <node-display x="21" y="36"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="Exception"/>
          <config-property key="ScriptFile" value="app_storefront_core:checkout/GetNonGiftCertificatePaymentAmount.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="PaymentAmount" key="Amount"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="ClearCreditCardFrom" pipelet-name="ClearFormElement" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard" key="FormElement"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="app_storefront_core:checkout/ValidatePaymentInstruments.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="CurrentHttpParameterMap.countryCode.value" key="CountryCode"/>
          <key-binding alias="CurrentCustomer" key="Customer"/>
          <key-binding alias="PaymentAmount" key="PaymentAmount"/>
          <key-binding alias="Basket.paymentInstruments" key="PaymentInstruments"/>
          <key-binding alias="InvalidPaymentInstruments" key="InvalidPaymentInstruments"/>
          <key-binding alias="ValidPaymentInstruments" key="ValidPaymentInstruments"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node custom-name="RemoveInvalidPaymentInstruments" pipelet-name="RemoveBasketPaymentInstrument" pipelet-set-identifier="bc_api">
                <key-binding alias="InvalidPaymentInstruments" key="PaymentInstruments"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="false" key="From_0"/>
                <key-binding alias="CurrentForms.billing.fulfilled.value" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1">
              <transition-display>
                <bend-point relative-to="source" x="0" y="2"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="3"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="COBilling-UpdatePaymentForms"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="CurrentCustomer.authenticated" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="GetCustomerPaymentInstruments" pipelet-set-identifier="bc_api">
                <key-binding alias="AvailableCreditCards" key="PaymentInstruments"/>
                <key-binding alias="dw.order.PaymentInstrument.METHOD_CREDIT_CARD" key="PaymentMethod"/>
                <key-binding alias="CurrentCustomer" key="Customer"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="app_storefront_core:checkout/ValidatePaymentInstruments.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="CurrentHttpParameterMap.countryCode.value" key="CountryCode"/>
                <key-binding alias="CurrentCustomer" key="Customer"/>
                <key-binding alias="PaymentAmount" key="PaymentAmount"/>
                <key-binding alias="AvailableCreditCards" key="PaymentInstruments"/>
                <key-binding alias="ApplicableCreditCards" key="ValidPaymentInstruments"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in2" target-path="../+1"/>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+2"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="2"/>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="checkout/billing/paymentmethods"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="UpdatePaymentForms">
    <segment>
      <node>
        <start-node call-mode="private" name="UpdatePaymentForms" secure="false"/>
        <node-display x="24" y="36"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="SetCountry" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentHttpParameterMap.countryCode.value" key="From_0"/>
          <key-binding alias="CurrentForms.billing.billingAddress.addressFields.country.value" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="BindPaymentMethodsToForm" pipelet-name="SetFormOptions" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.billing.paymentMethods.selectedPaymentMethodID" key="FormField"/>
          <key-binding alias="dw.order.PaymentMgr.getApplicablePaymentMethods(CurrentCustomer,CurrentHttpParameterMap.countryCode.value,PaymentAmount)" key="Options"/>
          <key-binding alias="null" key="Begin"/>
          <key-binding alias="null" key="End"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="BindPaymentCardsToForm" pipelet-name="SetFormOptions" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.type" key="FormField"/>
          <key-binding alias="dw.order.PaymentMgr.getPaymentMethod(dw.order.PaymentInstrument.METHOD_CREDIT_CARD).getApplicablePaymentCards(CurrentCustomer,CurrentHttpParameterMap.countryCode.value,PaymentAmount)" key="Options"/>
          <key-binding alias="null" key="Begin"/>
          <key-binding alias="null" key="End"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <loop-node element-key="ValidPaymentInstrument" iterator-key="ValidPaymentInstruments"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="do">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <decision-node condition-key="ValidPaymentInstrument.paymentMethod == dw.order.PaymentInstrument.METHOD_CREDIT_CARD" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node custom-name="Assign the unmasked credit card number to the credit card form" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="ValidPaymentInstrument.creditCardNumber" key="From_0"/>
                      <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.number.value" key="To_0"/>
                      <key-binding alias="ValidPaymentInstrument.creditCardHolder" key="From_1"/>
                      <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.owner.value" key="To_1"/>
                      <key-binding alias="ValidPaymentInstrument.creditCardType" key="From_2"/>
                      <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.type.value" key="To_2"/>
                      <key-binding alias="ValidPaymentInstrument.creditCardExpirationMonth" key="From_3"/>
                      <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.expiration.month.value" key="To_3"/>
                      <key-binding alias="ValidPaymentInstrument.creditCardExpirationYear" key="From_4"/>
                      <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.expiration.year.value" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in3" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
                <bend-point relative-to="target" x="1" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="2"/>
            </node>
            <transition target-connector="loop" target-path="..">
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
                <bend-point relative-to="source" x="-1" y="1"/>
                <bend-point relative-to="target" x="-1" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="ValidatePayment">
    <segment>
      <node>
        <start-node call-mode="private" name="ValidatePayment" secure="false"/>
        <node-display x="27" y="36"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CurrentForms.billing.fulfilled.value" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="Exception"/>
                <config-property key="ScriptFile" value="app_storefront_core:checkout/GetNonGiftCertificatePaymentAmount.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="Basket" key="Basket"/>
                <key-binding alias="PaymentAmount" key="Amount"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="app_storefront_core:checkout/ValidatePaymentInstruments.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="CountryCode" key="CountryCode"/>
                <key-binding alias="CurrentCustomer" key="Customer"/>
                <key-binding alias="PaymentAmount" key="PaymentAmount"/>
                <key-binding alias="Basket.paymentInstruments" key="PaymentInstruments"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../+1"/>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="ScriptFile" value="app_storefront_core:checkout/CalculatePaymentTransactionTotals.ds"/>
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="Basket" key="Basket"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="error">
                <transition target-connector="in2" target-path="../+2"/>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="target" x="0" y="-1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node/>
              <node-display x="0" y="3"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in2" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="2"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <key-binding alias="new dw.system.Status(dw.system.Status.ERROR)" key="From_0"/>
          <key-binding alias="PaymentStatus" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="false" key="From_0"/>
          <key-binding alias="CurrentForms.billing.fulfilled.value" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="error"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_54">
    <segment>
      <node>
        <text-node>
          <description>Attempts to save the used credit card in the customer payment instruments. The logic replaces an old saved credit card with the same masked credit card number of the same card type with the new credit card. This ensures creating only unique cards as well as replacing expired cards.</description>
        </text-node>
        <node-display width="2" x="6" y="44"/>
      </node>
    </segment>
  </branch>
  <branch basename="SaveCreditCard">
    <segment>
      <node>
        <start-node call-mode="private" name="SaveCreditCard" secure="false"/>
        <node-display x="6" y="45"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="CurrentCustomer.authenticated &amp;&amp; CurrentForms.billing.paymentMethods.creditCard.saveCard.value" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node custom-name="Get all saved credit cards" pipelet-name="GetCustomerPaymentInstruments" pipelet-set-identifier="bc_api">
                <key-binding alias="CreditCards" key="PaymentInstruments"/>
                <key-binding alias="dw.order.PaymentInstrument.METHOD_CREDIT_CARD" key="PaymentMethod"/>
                <key-binding alias="CurrentCustomer" key="Customer"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="CreateCustomerPaymentInstrument" pipelet-set-identifier="bc_api">
                <key-binding alias="dw.order.PaymentInstrument.METHOD_CREDIT_CARD" key="PaymentMethod"/>
                <key-binding alias="NewCreditCard" key="PaymentInstrument"/>
                <key-binding alias="CurrentCustomer" key="Customer"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="app_storefront_core:checkout/SaveCustomerCreditCard.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="NewCreditCard" key="PaymentInstrument"/>
                <key-binding alias="CurrentForms.billing.paymentMethods.creditCard" key="CreditCardFormFields"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <end-node name="error"/>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="in" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <loop-node element-key="creditcard" iterator-key="CreditCards"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="do">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <decision-node condition-key="(creditcard.maskedCreditCardNumber == NewCreditCard.maskedCreditCardNumber &amp;&amp; creditcard.creditCardType == NewCreditCard.creditCardType)" condition-operator="expr"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="yes">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="0" y="1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <pipelet-node custom-name="Remove the saved record of the same credit card" pipelet-name="RemoveCustomerPaymentInstrument" pipelet-set-identifier="bc_api">
                            <key-binding alias="creditcard" key="PaymentInstrument"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <transition target-connector="in1" target-path="../+1"/>
                      </segment>
                    </branch>
                  </node>
                  <transition target-connector="in2" target-path="./+1">
                    <transition-display>
                      <bend-point relative-to="source" x="1" y="0"/>
                      <bend-point relative-to="target" x="1" y="0"/>
                    </transition-display>
                  </transition>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="2"/>
                  </node>
                  <transition target-connector="loop" target-path="..">
                    <transition-display>
                      <bend-point relative-to="source" x="-1" y="0"/>
                      <bend-point relative-to="target" x="-1" y="0"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_56">
    <segment>
      <node>
        <text-node>
          <description>Checks if the basket has already a billing address set and creates one, if not.</description>
        </text-node>
        <node-display x="10" y="45"/>
      </node>
    </segment>
  </branch>
  <branch basename="ObtainBillingAddress">
    <segment>
      <node>
        <start-node call-mode="private" name="ObtainBillingAddress" secure="false"/>
        <node-display x="10" y="46"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="Basket.billingAddress == null" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="CreateBillingAddress" pipelet-set-identifier="bc_api">
                <key-binding alias="Basket" key="Basket"/>
                <key-binding alias="null" key="Address"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="2" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_58">
    <segment>
      <node>
        <text-node>
          <description>Attempts to save the used billing address in the customer address book.</description>
        </text-node>
        <node-display x="13" y="44"/>
      </node>
    </segment>
  </branch>
  <branch basename="SaveAddress">
    <segment>
      <node>
        <start-node call-mode="private" name="SaveAddress" secure="false"/>
        <node-display x="13" y="45"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CurrentCustomer.authenticated &amp;&amp; CurrentForms.billing.billingAddress.addToAddressBook.value" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="app_storefront_core:checkout/AddAddressToAddressBook.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="CurrentCustomer.profile" key="Profile"/>
                <key-binding alias="Basket.billingAddress" key="OrderAddress"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <end-node name="error"/>
                    <node-display orientation="horizontal" x="2" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in2" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
          <bend-point relative-to="target" x="1" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="ValidateBilling">
    <segment>
      <node>
        <start-node call-mode="private" name="ValidateBilling" secure="true"/>
        <node-display x="1" y="48"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="CurrentForms.billing.billingAddress.valid" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <decision-node condition-key="!empty(CurrentHttpParameterMap.noPaymentNeeded.value)" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <end-node/>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="!empty(CurrentForms.billing.paymentMethods.selectedPaymentMethodID.value) &amp;&amp; CurrentForms.billing.paymentMethods.selectedPaymentMethodID.value.equals(dw.order.PaymentInstrument.METHOD_CREDIT_CARD)" condition-operator="expr"/>
              <node-display orientation="horizontal" x="1" y="0"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <decision-node condition-key="CurrentForms.billing.valid" condition-operator="expr"/>
                    <node-display orientation="horizontal" x="1" y="0"/>
                    <branch basename="b2" source-connector="yes">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="1" y="0"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <end-node/>
                          <node-display orientation="horizontal" x="1" y="0"/>
                        </node>
                      </segment>
                    </branch>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <end-node name="Error"/>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="Error"/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
</pipeline>
