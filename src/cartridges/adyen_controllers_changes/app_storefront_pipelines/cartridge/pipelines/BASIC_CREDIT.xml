<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="process">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>Verifies a credit card against a valid card number and expiration date and possibly invalidates invalid form fields. If the verification was successful a credit card payment instrument is created.</description>
        </text-node>
        <node-display width="2" x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Handle">
    <segment>
      <node>
        <start-node call-mode="private" name="Handle" secure="false"/>
        <node-display x="1" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="VerifyPaymentCard" pipelet-set-identifier="bc_api">
          <config-property key="VerifySecurityCode" value="true"/>
          <key-binding alias="dw.order.PaymentMgr.getPaymentCard(CurrentForms.billing.paymentMethods.creditCard.type.value)" key="PaymentCard"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.number.value" key="CardNumber"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.expiration.month.value" key="ExpirationMonth"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.expiration.year.value" key="ExpirationYear"/>
          <key-binding alias="CreditCardStatus" key="Status"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.cvn.value" key="CardSecurityCode"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="app_storefront_core:checkout/InvalidatePaymentCardFormElements.js"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="CurrentForms.billing.paymentMethods.creditCard" key="CreditCardForm"/>
                <key-binding alias="CreditCardStatus" key="Status"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="1" y="0"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../b3.1">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="2"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../b3.1">
              <transition-display>
                <bend-point relative-to="source" x="2" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="app_storefront_core:checkout/CreatePaymentInstrument.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="dw.order.PaymentInstrument.METHOD_CREDIT_CARD" key="PaymentType"/>
          <key-binding alias="true" key="RemoveExisting"/>
          <key-binding alias="PaymentInstrument" key="PaymentInstrument"/>
          <key-binding alias="Basket != null ? Basket : Order" key="LineItemCtnr"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="2" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Copy the relevant credit card details to the payment instrument" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.owner.value" key="From_0"/>
          <key-binding alias="PaymentInstrument.creditCardHolder" key="To_0"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.number.value" key="From_1"/>
          <key-binding alias="PaymentInstrument.creditCardNumber" key="To_1"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.type.value" key="From_2"/>
          <key-binding alias="PaymentInstrument.creditCardType" key="To_2"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.expiration.month.value" key="From_3"/>
          <key-binding alias="PaymentInstrument.creditCardExpirationMonth" key="To_3"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.expiration.year.value" key="From_4"/>
          <key-binding alias="PaymentInstrument.creditCardExpirationYear" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="success"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_3">
    <segment>
      <node>
        <text-node>
          <description>Authorizes a payment using a credit card. The payment is authorized by using the BASIC_CREDIT processor only and setting the order no as the transaction ID. Customizations may use other processors and custom logic to authorize credit card payment.</description>
        </text-node>
        <node-display width="2" x="5" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Authorize">
    <segment>
      <node>
        <start-node call-mode="private" name="Authorize" secure="false"/>
        <node-display x="5" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="GetPaymentProcessor" pipelet-set-identifier="bc_api">
          <key-binding alias="&quot;BASIC_CREDIT&quot;" key="ID"/>
          <key-binding alias="PaymentProcessor" key="PaymentProcessor"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Just set transaction ID and processor" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="OrderNo" key="From_0"/>
          <key-binding alias="PaymentInstrument.paymentTransaction.transactionID" key="To_0"/>
          <key-binding alias="PaymentInstrument.paymentTransaction.paymentProcessor" key="To_1"/>
          <key-binding alias="PaymentProcessor" key="From_1"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="authorized"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
